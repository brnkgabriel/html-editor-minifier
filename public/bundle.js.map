{"version":3,"file":"bundle.js","mappings":"mBAAO,MAAMA,EACE,aCEA,IAAIC,MAAM,UAAW,CAClCC,QAAS,CAAEC,QAAS,YACpBC,MAAO,UAGU,ICLZ,cCHA,MAILC,cACEC,KAAKC,GAAK,CAACC,EAAeC,IAAyBA,EAASA,EAAOC,cAAcF,GAASG,SAASD,cAAcF,GACjHF,KAAKM,IAAM,CAACJ,EAAeC,IAAyBA,EAASA,EAAOI,iBAAiBL,GAASG,SAASE,iBAAiBL,EAC1H,GDAAH,cACES,QAEAR,KAAKS,cAAgBT,KAAKC,GAAGP,GAC7BM,KAAKU,eAAiBV,KAAKC,GFTf,WEWd,CAEAU,QACEX,KAAKU,eAAeE,iBFZV,QEYiDZ,KAAKa,YAAYC,KAAKd,MACnF,CAEAa,YAAYE,GACV,MAAMC,EAAsBhB,KAAKM,IAAI,eAA8BN,KAAKS,eAElEQ,EAAkBC,MACvBC,KAAKH,GACLI,QAAQnB,GFnBJ,SEmBwBA,EAAGoB,UAAUC,gBACzCC,KAAKtB,GAAoBA,EAAGuB,YAC5BC,KAAK,IAENzB,KAAK0B,WAAW1B,KAAKU,eAAgBO,EACvC,CAEAS,WAAYC,EAAkBC,GAC5B,OAAOC,UAAUC,UAAUC,UAAUH,GAClCI,MAAK,IAAMhC,KAAKiC,aAAaN,EAAK,aAClCO,OAAM,IAAMlC,KAAKiC,aAAaN,EAAK,kBACxC,CAEAM,aAAcN,EAAkBQ,GAC9B,MAAMC,EAAeT,EAAIN,UACzBM,EAAIN,UAAYc,EAChBE,YAAW,IAAMV,EAAIN,UAAYe,GAAc,IACjD,ID/BSzB,O","sources":["webpack://webpack-typescript/./src/core/constants.ts","webpack://webpack-typescript/./src/index.ts","webpack://webpack-typescript/./src/core/controller.ts","webpack://webpack-typescript/./src/core/util.ts"],"sourcesContent":["export const constants = {\r\n  EDITORQUERY: \".ql-editor\",\r\n  COPYBTNQUERY: \"#copyBtn\",\r\n\r\n  CLICKEVENT: \"click\",\r\n  BRTAG: \"<br>\"\r\n}","import { Controller } from \"./core/controller\"\r\n\r\n// @ts-ignore\r\nconst editor = new Quill('#editor', {\r\n  modules: { toolbar: '#toolbar' },\r\n  theme: 'snow'\r\n})\r\n\r\nconst controller = new Controller()\r\n\r\ncontroller.begin()","import { constants } from \"./constants\";\r\nimport { Util } from \"./util\";\r\n\r\nexport class Controller extends Util {\r\n  private editorElement: HTMLElement;\r\n  private copyBtnElement: HTMLElement;\r\n\r\n  constructor() {\r\n    super()\r\n\r\n    this.editorElement = this.el(constants.EDITORQUERY) as HTMLElement\r\n    this.copyBtnElement = this.el(constants.COPYBTNQUERY) as HTMLElement\r\n\r\n  }\r\n\r\n  begin() {\r\n    this.copyBtnElement.addEventListener(constants.CLICKEVENT, this.handleClick.bind(this))\r\n  }\r\n\r\n  handleClick(evt: Event) {\r\n    const directChildElements = this.all(`${constants.EDITORQUERY}>*`, this.editorElement)\r\n    \r\n    const contentElements = Array\r\n    .from(directChildElements)\r\n    .filter((el: HTMLElement) => el.innerHTML.toLowerCase() !== constants.BRTAG)\r\n    .map((el: HTMLElement) => el.outerHTML)\r\n    .join(\"\")\r\n\r\n    this.handleCopy(this.copyBtnElement, contentElements)\r\n  }\r\n\r\n  handleCopy (btn: HTMLElement, textToCopy: string) {\r\n    return navigator.clipboard.writeText(textToCopy)\r\n      .then(() => this.copyReaction(btn, \"Copied!\"))\r\n      .catch(() => this.copyReaction(btn, \"Copy Error :(\"));\r\n  }\r\n\r\n  copyReaction (btn: HTMLElement, msg: string) {\r\n    const originalHTML = btn.innerHTML\r\n    btn.innerHTML = msg\r\n    setTimeout(() => btn.innerHTML = originalHTML, 1000);\r\n  }\r\n  \r\n}","export class Util {\r\n  protected el: (query: string, parent?: HTMLElement) => HTMLElement | null\r\n  protected all: (query: string, parent?: HTMLElement) => NodeListOf<HTMLElement>\r\n\r\n  constructor() {\r\n    this.el = (query: string, parent?: HTMLElement) => parent ? parent.querySelector(query) : document.querySelector(query)\r\n    this.all = (query: string, parent?: HTMLElement) => parent ? parent.querySelectorAll(query) : document.querySelectorAll(query)\r\n  }\r\n}"],"names":["constants","Quill","modules","toolbar","theme","constructor","this","el","query","parent","querySelector","document","all","querySelectorAll","super","editorElement","copyBtnElement","begin","addEventListener","handleClick","bind","evt","directChildElements","contentElements","Array","from","filter","innerHTML","toLowerCase","map","outerHTML","join","handleCopy","btn","textToCopy","navigator","clipboard","writeText","then","copyReaction","catch","msg","originalHTML","setTimeout"],"sourceRoot":""}